{"version":3,"sources":["services/auth.js","components/Signup.js","components/Login.js","components/Navbar.js","components/AddPlant.js","components/EditPlant.js","components/PlantDetails.js","components/LivingRoom.js","components/Room.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["signup","username","password","axios","post","then","response","data","catch","error","login","Signup","state","message","handleChange","event","target","name","value","setState","handleSubmit","preventDefault","props","setUser","history","push","className","id","onSubmit","this","htmlFor","type","onChange","Component","Login","handleLogout","delete","Navbar","user","to","onClick","AddPlant","closeAddForm","src","plantCat","imgPath","style","height","width","nickname","description","water","sun","soil","submitNewPlant","EditPlant","plant","put","_id","console","log","closeEditForm","prevProps","prevState","PlantDetails","closePlantDetailsForm","deletePlant","toggleEditForm","LivingRoom","inquiredPlant","score","length","allPlants","plants","map","index","DisplayPlantDetails","handlePlantDetailsForm","Room","plantBtnId","addForm","editForm","plantDetailsForm","selectedPlantCatDefault","filteredPlants","filter","handleAddForm","selectedPlantCat","nursery","find","category","handleEditForm","plantId","handleWatering","get","Home","App","exact","path","render","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.72351cc8.chunk.js","sourcesContent":["// src/services/auth.js\n\nimport axios from 'axios';\n\nconst signup = (username, password) => {\n  return axios\n    .post('/api/auth/signup', { username, password })\n    .then(response => {\n      return response.data;\n    })\n    .catch(error => {\n      return error.response.data\n    });\n}\n\nconst login = (username, password) => {\n  return axios\n    .post('/api/auth/login', { username, password })\n    .then(response => {\n      return response.data;\n    })\n    .catch(error => {\n      return error.response.data\n    });\n}\n\nconst logout = (username, password) => {\n  return axios\n    .delete('/api/auth/logout')\n    .then(response => {\n      return response.data;\n    })\n    .catch(error => {\n      return error.response.data\n    });\n}\n\nexport { signup, login, logout };","import React, { Component } from 'react'\nimport { signup } from '../services/auth';\nimport './style.css'\n\nexport default class Signup extends Component {\n\n  state = {\n    username: '',\n    password: '',\n    message: ''\n  }\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    })\n  }\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { username, password } = this.state;\n    signup(username, password)\n      .then(data => {\n        if (data.message) {\n          this.setState({\n            message: data.message,\n            username: '',\n            password: ''\n          })\n        } else {\n          // now we need to put the user in the user key of the state of App.js\n          this.props.setUser(data);\n          // redirect to /user'sroom\n          this.props.history.push('/room');\n        }\n\n      })\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"interaction\">\n          <h2 className=\"labels\">Sign up</h2>\n          <form id=\"signup\" onSubmit={this.handleSubmit}>\n            <label className=\"labels\"  htmlFor=\"username\">Username: </label>\n            <input\n              type='text'\n              name='username'\n              value={this.state.username}\n              onChange={this.handleChange}\n              id='username'\n            />\n            <label className=\"labels\"  htmlFor=\"password\">Password: </label>\n            <input\n              type='password'\n              name='password'\n              value={this.state.password}\n              onChange={this.handleChange}\n              id='password'\n            />\n            {this.state.message && (\n              <p>{this.state.message}</p>\n            )}\n            <button className=\"submit-button\" type='submit'>Sign up!</button>\n          </form>\n        </div>\n      </>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { login } from '../services/auth';\nimport './style.css'\n\nexport default class Login extends Component {\n\n  state = {\n    username: '',\n    password: '',\n    message: ''\n  }\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    })\n  }\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { username, password } = this.state;\n    login(username, password)\n      .then(data => {\n        if (data.message) {\n          this.setState({\n            message: data.message,\n            username: '',\n            password: ''\n          })\n        } else {\n          // now we need to put the user in the user key of the state of App.js\n          this.props.setUser(data);\n          // redirect to / user'room\n          this.props.history.push('/room');\n        }\n\n      })\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"interaction\" >\n          <h2 className=\"labels\">Login</h2>\n          <form id=\"login\" onSubmit={this.handleSubmit}>\n            <label className=\"labels\" htmlFor=\"username\">Username: </label>\n            <input\n              type='text'\n              name='username'\n              value={this.state.username}\n              onChange={this.handleChange}\n              id='username'\n            />\n\n\n            <label className=\"labels\" htmlFor=\"password\">Password: </label>\n            <input\n              type='password'\n              name='password'\n              value={this.state.password}\n              onChange={this.handleChange}\n              id='password'\n            />\n            {this.state.message && (\n              <p>{this.state.message}</p>\n            )}\n            <button className=\"submit-button\" type='submit'>Log in!</button>\n          </form>\n        </div>\n      </>\n    )\n  }\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom';\nimport { logout } from '../services/auth';\nimport \"./style.css\"\n\n\nconst handleLogout = props => {\n  logout().then(() => {\n    props.setUser(null);\n  })\n}\n\nexport default function Navbar(props) {\n  return (\n    <nav className=\"nav-container\">\n      \n        {props.user ? (\n          <>\n          <ul className=\"room-nav\">\n            <li className=\"welcome-message\">Welcome to your very own Green Room {props.user.username}! </li>\n            <li className=\"nav-button\" > <Link to='/' onClick={() => handleLogout(props)}>Logout</Link> </li>\n          </ul>\n          </>\n        ) : (\n            <>\n            <ul className=\"homepage-nav\">\n              <li className=\"nav-button\" > <Link to='/signup'>Signup</Link> </li>\n              <li className=\"nav-button\"> <Link to='/login'>Login</Link></li>\n            </ul>\n            </>\n          )}\n\n    </nav>\n  )\n}","import React, { Component } from \"react\";\nimport \"./style.css\";\nimport nursery from \"../assets/nursery.json\";\nimport \"./style.css\"\nimport { authorize } from \"passport\";\n\nclass AddPlant extends Component {\n  render() {\n    return (\n      <div className=\"interaction\">\n\n<button className=\"close\" onClick={this.props.closeAddForm}></button>\n\n        <img\n          src={this.props.plantCat.imgPath[0]}\n          style={{ height: \"40%\", width: \"40%\"}}\n        ></img>\n\n        <div>\n          <strong>Nickname: </strong>\n          <span>{this.props.plantCat.nickname}</span>\n        </div>\n\n        <div>\n          <strong>Description: </strong>\n          <span>{this.props.plantCat.description}</span>\n        </div>\n\n        <div className=\"iconwater icones\">\n          <strong><img src=\"https://img.icons8.com/plasticine/100/000000/plant-under-rain.png\" /></strong>\n          <span>{this.props.plantCat.water}</span>\n        </div>\n\n        <div className=\"icones\">\n          <strong><img src=\"https://img.icons8.com/doodle/48/000000/sun--v1.png\" />  </strong>\n          <span>{this.props.plantCat.sun}</span>\n        </div>\n\n        <div className=\"icones\">\n          <strong><img src=\"https://img.icons8.com/doodle/48/000000/hand-planting.png\" /> </strong>\n          <span>{this.props.plantCat.soil}</span>\n        </div>\n        <button className=\"submit-button\" type=\"submit\" onClick={this.props.submitNewPlant}>\n          Add your plant!\n        </button>\n\n        \n      </div>\n    );\n  }\n}\n\nexport default AddPlant;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"./style.css\";\n\nclass EditPlant extends Component {\n  state = {\n    nickname: this.props.plant.nickname,\n    water: this.props.plant.water,\n    sun: this.props.plant.sun,\n    soil: this.props.plant.soil,\n  };\n\n  handleSubmit = (event) => {\n    const nickname = this.state.nickname;\n    const water = this.state.water;\n    const sun = this.state.water;\n    const soil = this.state.soil;\n\n    event.preventDefault();\n\n    axios\n      .put(`/api/plants/${this.props.plant._id}`, {\n        nickname,\n        water,\n        sun,\n        soil,\n      })\n      .then((response) => {\n        console.log(response);\n        this.props.closeEditForm()\n        // this.props.getTheProject();\n        // after submitting the form, redirect to '/projects'\n        // this.props.history.push(\"/room\");\n      })\n      .catch((error) => console.log(error));\n  };\n\n  handleChange = (event) => {\n    let { name, value } = event.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.plant !== this.props.plant) {\n      this.setState({\n        nickname: this.props.plant.nickname,\n        water: this.props.plant.water,\n        sun: this.props.plant.sun,\n        soil: this.props.plant.soil,\n      });\n    }\n  }\n\n  render() {\n    console.log(this.state, this.props.plant);\n    return (\n      <div className=\"interaction\">\n\n<button className=\"close\" onClick={this.props.closeEditForm}></button>\n\n        <h1>Customise your Plant!</h1>\n\n        <form onSubmit={this.handleSubmit} className=\"interaction\">\n          <label id=\"editNickname\">Nickname: </label>\n          <input\n            type=\"text\"\n            name=\"nickname\"\n            value={this.state.nickname}\n            onChange={this.handleChange}\n          />\n\n          <label className=\"icones\" ><strong><img src=\"https://img.icons8.com/plasticine/100/000000/plant-under-rain.png\" /></strong></label>\n          <input\n            type=\"text\"\n            name=\"water\"\n            value={this.state.water}\n            onChange={this.handleChange}\n          />\n\n          <label className=\"icones\"> <strong><img src=\"https://img.icons8.com/doodle/48/000000/sun--v1.png\" />  </strong> </label>\n          <input\n            type=\"text\"\n            name=\"sun\"\n            value={this.state.sun}\n            onChange={this.handleChange}\n          />\n\n          <label className=\"icones\"> <strong><img src=\"https://img.icons8.com/doodle/48/000000/hand-planting.png\" /> </strong></label>\n          <input\n            type=\"text\"\n            name=\"soil\"\n            value={this.state.soil}\n            onChange={this.handleChange}\n          />\n\n          <button className=\"submit-button\" id=\"editbtn\" type=\"submit\" >My plant is ready!</button>\n          \n        </form>\n      </div>\n    );\n  }\n}\n\nexport default EditPlant;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport Room from \"./Room\";\nimport EditPlant from \"./EditPlant\";\nimport \"./style.css\";\n\nclass PlantDetails extends Component {\n  // state = {\n  //   plantDetails: {},\n  // };\n\n  // componentDidMount() {\n  //   axios\n  //     // .get(`/api/plants/plantDetails/${this.props.match.params.id}`)\n  //     .get(`/api/plants/plantDetails/${this.props.plantId}`)\n  //     .then((plant) => {\n  //       console.log(plant, typeof plant);\n  //       this.setState({ plantDetails: plant.data });\n  //     });\n  // }\n\n  render() {\n    console.log(this.props.id, \"THIS IS THE PLANT!!!!!!\");\n    return (\n      <div className=\"interaction\">\n      \n<button onClick={this.props.closePlantDetailsForm} className=\"close\"></button>\n\n        <h1>Get To Know Your Plant</h1>\n    \n\n        <div>\n          <strong>Nickname: </strong>\n          <span>{this.props.plant.nickname}</span>\n        </div>\n\n        <div>\n          <strong>Description: </strong>\n          <span>{this.props.plant.description}</span>\n        </div>\n\n        <div className=\"iconwater icones\">\n          <strong><img src=\"https://img.icons8.com/plasticine/100/000000/plant-under-rain.png\" /></strong>\n          <span>{this.props.plant.water}</span>\n        </div>\n\n        <div className=\"icones\">\n          <strong><img src=\"https://img.icons8.com/doodle/48/000000/sun--v1.png\" />  </strong>\n          <span>{this.props.plant.sun}</span>\n        </div>\n\n        <div className=\"icones\">\n          <strong><img src=\"https://img.icons8.com/doodle/48/000000/hand-planting.png\" />   </strong>\n          <span>{this.props.plant.soil}</span>\n        </div>\n\n        <div>\n          <button\n            className=\"submit-button\"\n            onClick={() => this.props.deletePlant(this.props.id)}\n          >\n            Unpot your plant!\n          </button>\n\n          <button className=\"submit-button\" onClick={this.props.toggleEditForm}>Customise your plant!</button>\n         \n\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PlantDetails;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport PlantDetails from \"./PlantDetails\";\nimport Room from \"./Room\";\nimport \"./style.css\"\n\nexport default class LivingRoom extends Component {\n  state = {\n    inquiredPlant: \"\",\n  };\n\n  render() {\n    console.log(this.props.score % this.props.length);\n    let allPlants = this.props.plants.map((plant, index) => {\n      return (\n        <img\n          className={`plant plant${index}`}\n          src={plant.imgPath[this.props.score % plant.imgPath.length]}\n          onClick={() => this.props.DisplayPlantDetails(plant._id)}\n        />\n      );\n    });\n\n    console.log(\"this is allPlants\", allPlants);\n    console.log(\"this is the user inside the living room\", this.props.user._id);\n    console.log(\"Zähler für alle Pflanzen\", allPlants.score);\n    return (\n      <div className=\"living-room\">\n        {/* <div>\n          <button id=\"watering\" onClick={this.handleWatering}>\n            <img src=\"https://img.icons8.com/doodle/50/000000/watering-can--v1.png\" />\n          </button>\n        </div> */}\n        {allPlants} {this.props.handlePlantDetailsForm}\n      </div>\n\n    );\n  }\n}\n\n/* console.log(\"this is allPlants\", this.props.plants);\nconsole.log(\"this is the user inside the living room\", this.props.user._id);\nreturn (\n  <div>\n    <h1>That's the Living Room!</h1>\n    { allPlants}\n    { this.props.handlePlantDetailsForm}\n  </div >\n);\n}\n} */\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport Navbar from \"./Navbar\";\nimport AddPlant from \"./AddPlant\";\nimport EditPlant from \"./EditPlant\";\nimport PlantDetails from \"./PlantDetails\";\nimport \"./style.css\";\nimport axios from \"axios\";\n\nimport nursery from \"../assets/nursery.json\";\nimport LivingRoom from \"./LivingRoom\";\n\nclass Room extends Component {\n  state = {\n    plantBtnId: \"\",\n    addForm: false,\n    editForm: false,\n    plantDetailsForm: false,\n    selectedPlantCatDefault: {},\n    plants: [],\n    inquiredPlant: \"\",\n    score: 0,\n  };\n  componentDidMount() {\n    axios.get(`/api/plants/${this.props.user._id}`).then((plants) => {\n      console.log(plants.data, typeof plants.data);\n      this.setState({ plants: plants.data });\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.inquiredPlant !== this.state.inquiredPlant) {\n      axios.get(`/api/plants/${this.props.user._id}`).then((plants) => {\n        console.log(plants.data, typeof plants.data);\n        this.setState({ plants: plants.data });\n      });\n    }\n  }\n\n  deletePlant = (id) => {\n    axios\n      .delete(`/api/plants/${id}`)\n      .then(() => {\n        let filteredPlants = this.state.plants.filter((plant) => {\n          if (plant._id == id) {\n            return false;\n          }\n          return true;\n        });\n\n        this.setState({\n          plants: filteredPlants,\n        });\n        this.closePlantDetailsForm()\n        this.props.history.push(\"/room\");\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  handleAddForm = (event) => {\n    let selectedPlantCat = nursery.find((plant) => {\n      if (plant.category == event.target.id) {\n        return plant;\n      }\n    });\n    this.setState({\n      plantBtnId: event.target.id,\n      addForm: true,\n      editForm: false,\n      selectedPlantCatDefault: selectedPlantCat,\n      plantDetailsForm: false,\n    });\n    console.log(this.state);\n  };\n\n  submitNewPlant = (event) => {\n    console.log(\"hello there\");\n    event.preventDefault();\n    axios\n      .post(\"/api/plants\", this.state.selectedPlantCatDefault)\n      .then((response) => {\n        console.log(\"please work\", response.data);\n        this.setState({\n          plants: [...this.state.plants, response.data],\n          addForm: false,\n        });\n        return <Redirect to=\"/room\" />;\n      });\n  };\n\n  closeAddForm = () => {\n    this.setState({ addForm: false });\n  };\n\n  handleEditForm = (event) => {\n    this.setState({\n      plantId: event.target.id,\n      editForm: true,\n      plantDetailsForm: false,\n    });\n  };\n\n  toggleEditForm = () => {\n    console.log(\"living the dream\");\n    this.setState((state) => ({\n      editForm: !state.editForm,\n      plantDetailsForm: false,\n      addForm: false,\n    }));\n  };\n\n  handlePlantDetailsForm = (plantId) => {\n    let inquiredPlant = this.state.plants.find(\n      (plant) => plant._id === plantId\n    );\n    this.setState({\n      inquiredPlant: inquiredPlant,\n      plantDetailsForm: true,\n      addForm: false,\n      editForm: false,\n    });\n  };\n\n  closeEditForm = () => {\n    this.setState({ editForm: false });\n  };\n\n  closePlantDetailsForm = () => {\n    this.setState({ plantDetailsForm: false });\n  };\n\n\n\n  handleWatering = () => {\n    console.log(\"Zähler für alle Pflanzen\");\n    this.setState({\n      score: this.state.score + 1,\n    });\n  };\n\n  render() {\n    {\n      console.log(this.props.user);\n    }\n    console.log(this.state.selectedPlantCatDefault);\n\n    console.log(this.props.user);\n    console.log(this.state.plants);\n    console.log(this.state.selectedPlantCatDefault);\n    return (\n      <div className=\"room\">\n        <h2>Choose a plant to add to your garden:</h2>\n        <div className=\"button-container\">\n          <button className=\"plant-button\" id=\"cacti\" onClick={this.handleAddForm}>\n            Cactus\n          </button>\n          <button className=\"plant-button\" id=\"leafyplant\" onClick={this.handleAddForm}>\n            Leafy Plant\n          </button>\n          <button className=\"plant-button\" id=\"succulent\" onClick={this.handleAddForm}>\n            Succulent\n          </button>\n          <button className=\"plant-button\" id=\"fern\" onClick={this.handleAddForm}>\n            Fern\n          </button>\n          <button className=\"plant-button\" id=\"peperomies\" onClick={this.handleAddForm}>\n            Peperomie\n          </button>\n          <div>\n            <button id=\"watering\" onClick={this.handleWatering}>\n              <img src=\"https://img.icons8.com/doodle/50/000000/watering-can--v1.png\" />\n            </button>\n          </div>\n        </div>\n        <div className=\"room-container\">\n          <div>\n            {this.state.addForm ? (\n              <AddPlant\n                plantCat={this.state.selectedPlantCatDefault}\n                closeAddForm={this.closeAddForm}\n                submitNewPlant={this.submitNewPlant}\n              />\n            ) : (\n                <></>\n              )}\n            {this.state.editForm ? (\n              <EditPlant\n                closeEditForm={this.closeEditForm}\n                plant={this.state.inquiredPlant}\n              />\n            ) : (\n                <></>\n              )}\n            {this.state.plantDetailsForm && (\n              <PlantDetails\n                closeEditForm={this.closeEditForm}\n                plant={this.state.inquiredPlant}\n                toggleEditForm={this.toggleEditForm}\n                deletePlant={this.deletePlant}\n                id={this.state.inquiredPlant._id}\n                closePlantDetailsForm={this.closePlantDetailsForm}\n              />\n            )}\n          </div>\n          <LivingRoom\n            user={this.props.user}\n            plants={this.state.plants}\n            score={this.state.score}\n            DisplayPlantDetails={this.handlePlantDetailsForm}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Room;\n","import React, { Component } from 'react'\nimport './style.css'\n\nclass Home extends Component {\n  render() {\n    return (\n      <div>\n        <div className=\"home-container\">\n          <div className=\"logo-circle\">\n              <h1 className=\"my-green-room\">MY <br />GREEN <br />ROOM</h1>\n          </div>\n          <img />\n          <div className=\"home-text\">Come in and create your very own virtual home garden! ...and learn how to care for your real plants along the way!</div>\n          <img />\n        </div>\n      </div>\n    )\n  }\n}\n\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport \"./App.css\";\nimport Signup from \"./components/Signup\";\nimport Login from \"./components/Login\";\nimport Navbar from \"./components/Navbar\";\nimport Room from \"./components/Room\";\nimport Home from \"./components/Home\";\nimport PlantDetails from \"./components/PlantDetails\";\nimport EditPlant from \"./components/EditPlant\";\nimport \"../src/components/style.css\"\n\nclass App extends Component {\n  state = {\n    user: this.props.user,\n  };\n\n  setUser = (user) => {\n    this.setState({\n      user: user,\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <Navbar user={this.state.user} setUser={this.setUser} />\n\n        <Route\n          exact\n          path=\"/\"\n          render={(props) => <Home setUser={this.setUser} {...props} />}\n        />\n\n        <Route\n          exact\n          path=\"/room\"\n          render={(props) => {\n            if (this.state.user) {\n              return <Room setUser={this.setUser} {...props} user={this.state.user} />\n            } else return <Redirect to='/' />\n          }}\n        />\n\n        <Route\n          exact\n          path=\"/room/:id\"\n          render={(props) => (\n            <PlantDetails\n              setUser={this.setUser}\n              user={this.state.user}\n              {...props}\n            />\n          )}\n        />\n\n        <Route\n          exact\n          path=\"/signup\"\n          render={(props) => <Signup setUser={this.setUser} {...props} />}\n        />\n        <Route\n          exact\n          path=\"/login\"\n          render={(props) => <Login setUser={this.setUser} {...props} />}\n        />\n\n        <Route\n          exact\n          path=\"/room/:id\"\n          render={(props) => (\n            <EditPlant\n              setUser={this.setUser}\n              user={this.state.user}\n              {...props}\n            />\n          )}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport axios from 'axios';\n\naxios.get('/api/auth/loggedin')\n  .then(response => {\n    const user = response.data;\n    ReactDOM.render(\n      <BrowserRouter>\n        <App user={user} />\n      </BrowserRouter>,\n      document.getElementById('root')\n    );\n  });\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}